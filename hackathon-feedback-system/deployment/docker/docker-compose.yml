# docker-compose.yml for local development and testing
version: '3.8'

services:
  # Main application
  hackathon-feedback:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - HACKATHON_ID=DEV2024
      - HACKATHON_NAME=Development Hackathon
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - DYNAMODB_TABLE_NAME=hackathon-feedback-dev
      - S3_BUCKET_NAME=hackathon-feedback-dev
    depends_on:
      - dynamodb-local
    volumes:
      - ../../:/app
      - feedback-data:/app/data
    networks:
      - hackathon-network

  # Local DynamoDB for development
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - hackathon-network

  # DynamoDB Admin UI (optional)
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
    networks:
      - hackathon-network

  # Analytics dashboard (optional)
  analytics-dashboard:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.dashboard
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8001
      - REACT_APP_HACKATHON_ID=DEV2024
    depends_on:
      - hackathon-feedback
    networks:
      - hackathon-network

volumes:
  dynamodb-data:
  feedback-data:

networks:
  hackathon-network:
    driver: bridge